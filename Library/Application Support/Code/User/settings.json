{
  // user interface
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.smoothScrolling": true,
  "editor.fontFamily": "JetbrainsMono Nerd Font",
  "editor.fontSize": 17,
  "editor.renderWhitespace": "boundary",
  "editor.minimap.maxColumn": 200,
  "editor.minimap.showSlider": "always",
  "editor.minimap.autohide": true,
  "editor.minimap.scale": 2,
  "editor.minimap.renderCharacters": false,
  "window.restoreWindows": "none",
  "window.commandCenter": false,
  "window.dialogStyle": "custom",
  "window.title": "${rootName}",
  "explorer.confirmDragAndDrop": false,
  "explorer.compactFolders": false,
  "explorer.autoReveal": false,
  "explorer.confirmDelete": false,
  "explorer.sortOrder": "default",
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontFamily": "JetbrainsMono Nerd Font",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.smoothScrolling": true,
  "workbench.preferredDarkColorTheme": "One Dark Pro Darker",
  "workbench.sideBar.location": "right",
  "workbench.editor.enablePreview": false,
  "workbench.startupEditor": "none",
  "workbench.colorTheme": "One Dark Pro Darker",
  "workbench.editor.wrapTabs": true,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.revealIfOpen": false,
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.hidesExplorerArrows": true,
  // editor settings
  "debug.toolBarLocation": "docked",
  "debug.onTaskErrors": "debugAnyway",
  "editor.tabSize": 4,
  "editor.cursorSurroundingLines": 10,
  "editor.wordWrap": "off",
  "editor.wordWrapColumn": 80,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.guides.bracketPairsHorizontal": false,
  "editor.accessibilitySupport": "off",
  "editor.multiCursorModifier": "alt",
  "editor.linkedEditing": true,
  "editor.lineNumbers": "relative",
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.stickyScroll.enabled": true,
  "editor.hover.sticky": true,
  "files.autoSave": "onFocusChange",
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  "files.associations": {
    "*.css": "tailwindcss"
  },
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "git.inputValidation": true,
  "scm.diffDecorationsGutterWidth": 2,
  // emmet
  "emmet.includeLanguages": {
    "smarty": "html"
  },
  // privacy
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  // gitlens
  "gitlens.defaultDateLocale": "en",
  "gitlens.defaultDateFormat": "HH:mm DD MM YYYY",
  "gitlens.defaultDateShortFormat": "DD/MM/YYYY",
  "gitlens.defaultTimeFormat": "HH:mm",
  // prettier settings
  "prettier.enable": false, // format only manually
  // kubernetes dependencies
  "vs-kubernetes": {
    "vscode-kubernetes.helm-path-mac": "/opt/homebrew/bin/helm",
    "vscode-kubernetes.minikube-path-mac": "/opt/homebrew/bin/minikube",
    "vscode-kubernetes.kubectl-path-mac": "/opt/homebrew/bin/kubectl",
    "vs-kubernetes.crd-code-completion": "disabled"
  },
  // css enhancement
  "css.enabledLanguages": [
    "html"
  ],
  "css.styleSheets": [
    "src/**/*.css"
  ], // change accordingly to the project
  // eslint
  "eslint.useFlatConfig": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue"
  ],
  "eslint.format.enable": true,
  // typescript
  "typescript.referencesCodeLens.enabled": true,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.preferGoToSourceDefinition": true,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.preferences.importModuleSpecifierEnding": "minimal",
  "[typescript][typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "never"
    }
  },
  // javascript
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "javascript.validate.enable": true,
  "javascript.preferGoToSourceDefinition": true,
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "javascript.suggest.paths": true,
  "javascript.preferences.importModuleSpecifierEnding": "minimal",
  "[javascript][javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "never"
    }
  },
  // php
   // PHP Formatter bmewburn.vscode-intelephense-client or
   "laravel-pint.enable": true,
   "[php]": {
       "editor.defaultFormatter": "open-southeners.laravel-pint"
   },
   // Laravel Extra Intellisense (docker settings)
   "LaravelExtraIntellisense.basePathForCode": "/var/www",
   "LaravelExtraIntellisense.phpCommand": "docker-compose exec -w /var/www/ php php -r \"{code}\"",
   // Laravel Blade Snippets
   "blade.format.enable": true, // if you would like to enable blade format
   "[blade]": {
       "emmet.triggerExpansionOnTab": true, // enable tab to expanse emmet tags
       "editor.autoClosingBrackets": "always",
       "editor.defaultFormatter": "onecentlin.laravel-blade" // use formatter for blade files
   },
   // Laravel Artisan (docker settings)
   "artisan.docker.enabled": true,
   "artisan.docker.command": "docker-compose exec php", // php is the name of docker-compose service
  // json schemas
  "json.schemas": [
    {
      "fileMatch": [
        "tsconfig.*.json",
        "tsconfig.json"
      ],
      "url": "http://json.schemastore.org/tsconfig"
    },
    {
      "fileMatch": [
        "package.json"
      ],
      "url": "http://json.schemastore.org/package"
    }
  ],
  // cspell settings
  "cSpell.language": "en,en-US",
  "cSpell.allowCompoundWords": true,
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.userWords": [
    "Banev",
    "devastion",
    "Dimitar",
    "wilks"
  ],
  // custom visuals
  "apc.imports": [
    "/Users/banev/Library/Application Support/Code/User/custom.css"
  ],
  // vim
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.enableNeovim": true,
  "vim.useSystemClipboard": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,
  "vim.leader": "<space>",
  "vim.normalModeKeyBindings": [
    {
      "before": [
        "g",
        "p",
        "d"
      ],
      "commands": [
        "editor.action.peekDefinition"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    },
    {
      "before": [
        "g",
        "i"
      ],
      "commands": [
        "editor.action.goToImplementation"
      ]
    },
    {
      "before": [
        "g",
        "p",
        "i"
      ],
      "commands": [
        "editor.action.peekImplementation"
      ]
    },
    {
      "before": [
        "g",
        "q"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "g",
        "r"
      ],
      "commands": [
        "editor.action.referenceSearch.trigger"
      ]
    },
    {
      "before": [
        "g",
        "t"
      ],
      "commands": [
        "editor.action.goToTypeDefinition"
      ]
    },
    {
      "before": [
        "g",
        "p",
        "t"
      ],
      "commands": [
        "editor.action.peekTypeDefinition"
      ]
    },
    {
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        "workbench.view.explorer"
      ]
    },
    {
      "before": [
        "H"
      ], // Focus previous tab at the left
      "commands": [
        "workbench.action.previousEditor"
      ]
    },
    {
      "before": [
        "L"
      ], // Focus next tab at the right
      "commands": [
        "workbench.action.nextEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "f",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<leader>",
        "b",
        "d"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "b",
        "r"
      ],
      "commands": [
        "workbench.action.reopenClosedEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "b",
        "b"
      ],
      "commands": [
        "workbench.action.showAllEditors"
      ]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ]
    }
  ],
  "whichkey.bindings": [
    {
      "key": "f",
      "name": "+Find",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find file",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
      ]
    }
  ],
  "apc.stylesheet": {
    // Colorize entries starting with a `+` differently
    ".quick-input-widget > .quick-input-list .monaco-list-row[aria-label*=\" +\"] .label-description": "color: #8ec07c;",
  }
}
